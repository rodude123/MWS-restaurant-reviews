{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","c1","c2","c3","c4","window","initMap","fetchRestaurantFromURL","error","console","self","google","maps","Map","document","getElementById","zoom","center","latlng","scrollwheel","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","innerHTML","name","address","aLazy","href","imageUrlForRestaurant","setAttribute","image","className","alt","arialabel","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","key","row","createElement","day","appendChild","time","reviews","container","title","noReviews","ul","forEach","review","createReviewHTML","li","header","date","rating","boldRating","comments","breadcrumb","url","location","replace","results","RegExp","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\r\nvar map;\r\nlet c1 = 0;\r\nlet c2 = 0;\r\nlet c3 = 0;\r\nlet c4 = 0;\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  fetchRestaurantFromURL((error, restaurant) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.map = new google.maps.Map(document.getElementById('map'), {\r\n        zoom: 16,\r\n        center: restaurant.latlng,\r\n        scrollwheel: false\r\n      });\r\n      if (c1 == 0) \r\n      {\r\n        fillBreadcrumb();\r\n        c1 = 1;\r\n      }\r\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Get current restaurant from page URL.\r\n */\r\nfetchRestaurantFromURL = (callback) => {\r\n  if (self.restaurant) { // restaurant already fetched!\r\n    callback(null, self.restaurant)\r\n    return;\r\n  }\r\n  const id = getParameterByName('id');\r\n  if (!id) { // no id found in URL\r\n    error = 'No restaurant id in URL'\r\n    callback(error, null);\r\n  } else {\r\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\r\n      self.restaurant = restaurant;\r\n      if (!restaurant) {\r\n        console.error(error);\r\n        return;\r\n      }\r\n      if (c2 == 0) \r\n      {\r\n        fillRestaurantHTML();\r\n        c2 = 1;\r\n      }\r\n      callback(null, restaurant)\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\r\nfillRestaurantHTML = (restaurant = self.restaurant) => {\r\n    const name = document.getElementById('restaurant-name');\r\n    name.innerHTML = restaurant.name;\r\n\r\n    const address = document.getElementById('restaurant-address');\r\n    address.innerHTML = restaurant.address;\r\n\r\n    const aLazy = document.getElementById('aLazy');\r\n    aLazy.href = DBHelper.imageUrlForRestaurant(restaurant) + '800.jpg';\r\n    aLazy.setAttribute(\"data-srcset\", `${DBHelper.imageUrlForRestaurant(restaurant)}300.jpg 400w, ${DBHelper.imageUrlForRestaurant(restaurant)}400.jpg 600w, ${DBHelper.imageUrlForRestaurant(restaurant)}600.jpg 800w, ${DBHelper.imageUrlForRestaurant(restaurant)}800.jpg 1200w`)\r\n\r\n    const image = document.getElementById('restaurant-img');\r\n    image.className = 'restaurant-img preview';\r\n    if (restaurant.name == \"Mission Chinese Food\") \r\n    {\r\n        image.alt = \"People sitting inside Mission Chinese Food\";\r\n        image.arialabel = \"People sitting inside Mission Chinese Food\";\r\n    }\r\n    else if (restaurant.name == \"Kang Ho Dong Baekjeong\") \r\n    {\r\n        image.alt = \"Empty restaurant with orange looking tables and chairs angled more towards the left\";\r\n        image.arialabel = \"Empty restaurant with orange looking tables and chairs angled more towards the left\";\r\n    }\r\n    else if (restaurant.name == \"Katz's Delicatessen\") \r\n    {\r\n        image.alt = \"Outside night photo of the restaurant\";\r\n        image.arialabel = \"Outside night photo of the restaurant\";\r\n    } \r\n    else if (restaurant.name == \"Roberta's Pizza\") \r\n    {\r\n        image.alt = \"People sitting inside Roberta's Pizza\";\r\n        image.arialabel = \"People sitting inside Roberta's Pizza\";\r\n    } \r\n    else if (restaurant.name == \"Hometown BBQ\") \r\n    {\r\n        image.alt = \"American themed restaurant with people sitting inside\";\r\n        image.arialabel = \"American themed restaurant with people sitting inside\";\r\n    } \r\n    else if (restaurant.name == \"Superiority Burger\") \r\n    {\r\n        image.alt = \"Black and white photo of the outside of the Superiority Burger restaurant and with people inside\";\r\n        image.arialabel = \"Black and white photo of the outside of the Superiority Burger restaurant and with people inside\";\r\n    } \r\n    else if (restaurant.name == \"The Dutch\") \r\n    {\r\n        image.alt = \"Close up view of the outside of the restaurant\";\r\n        image.arialabel = \"Close up view of the outside of the restaurant\";\r\n    }\r\n    else if (restaurant.name == \"Mu Ramen\") \r\n    {\r\n        image.alt = \"Slightly blured black and white photo of people sitting and eating\";\r\n        image.arialabel = \"Slightly blured black and white photo of people sitting and eating\";\r\n    } \r\n    else if (restaurant.name == \"Casa Enrique\") \r\n    {\r\n        aLazy.href = \"/imgRes/10-400.jpg\";\r\n        image.alt = \"Empty restaurant with tables and chairs angled towards the left\";\r\n        image.arialabel = \"Empty restaurant with tables and chairs angled towards the left\";\r\n    }\r\n\r\n\r\n  const cuisine = document.getElementById('restaurant-cuisine');\r\n  cuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n  // fill operating hours\r\n  if (restaurant.operating_hours) \r\n  {\r\n    if (c3 == 0) \r\n    {\r\n      fillRestaurantHoursHTML();\r\n      c3 = 1;\r\n    }\r\n    \r\n  }\r\n  // fill reviews\r\n  if (c4 == 0) \r\n  {\r\n    fillReviewsHTML();\r\n    c4 = 1;\r\n  }\r\n  \r\n}\r\n\r\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\r\nfillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n  const hours = document.getElementById('restaurant-hours');\r\n  for (let key in operatingHours) {\r\n    const row = document.createElement('tr');\r\n\r\n    const day = document.createElement('td');\r\n    day.innerHTML = key;\r\n    row.appendChild(day);\r\n\r\n    const time = document.createElement('td');\r\n    time.innerHTML = operatingHours[key];\r\n    row.appendChild(time);\r\n\r\n    hours.appendChild(row);\r\n  }\r\n}\r\n\r\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\r\nfillReviewsHTML = (reviews = self.restaurant.reviews) => {\r\n  const container = document.getElementById('reviews-container');\r\n  const title = document.createElement('h3');\r\n  title.innerHTML = 'Reviews';\r\n  container.appendChild(title);\r\n\r\n  if (!reviews) {\r\n    const noReviews = document.createElement('p');\r\n    noReviews.innerHTML = 'No reviews yet!';\r\n    container.appendChild(noReviews);\r\n    return;\r\n  }\r\n  const ul = document.getElementById('reviews-list');\r\n  reviews.forEach(review => {\r\n    ul.appendChild(createReviewHTML(review));\r\n  });\r\n  container.appendChild(ul);\r\n}\r\n\r\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\r\ncreateReviewHTML = (review) => {\r\n  const li = document.createElement('li');\r\n  li.className = \"review\"\r\n  const header = document.createElement('div');\r\n  header.className = \"reviewHeader mainContainer\";\r\n  li.appendChild(header);\r\n\r\n  const name = document.createElement('p');\r\n  name.className = \"name reviewHeaderContent\";\r\n  name.innerHTML = review.name;\r\n  header.appendChild(name);\r\n\r\n  const date = document.createElement('p');\r\n  date.className = \"date reviewHeaderContent\";\r\n  date.innerHTML = review.date;\r\n  header.appendChild(date);\r\n\r\n  const rating = document.createElement('div');\r\n  const boldRating = document.createElement('strong');\r\n  rating.className = \"rating\";\r\n  rating.innerHTML = `Rating: ${review.rating}`;\r\n  boldRating.appendChild(rating);\r\n  li.appendChild(boldRating);\r\n\r\n  const comments = document.createElement('p');\r\n  comments.innerHTML = review.comments;\r\n  li.appendChild(comments);\r\n\r\n  return li;\r\n}\r\n\r\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\r\nfillBreadcrumb = (restaurant=self.restaurant) => {\r\n  const breadcrumb = document.getElementById('breadcrumb');\r\n  const li = document.createElement('li');\r\n  li.innerHTML = restaurant.name;\r\n  breadcrumb.appendChild(li);\r\n}\r\n\r\n/**\r\n * Get a parameter by name from page URL.\r\n */\r\ngetParameterByName = (name, url) => {\r\n  if (!url)\r\n    url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n    results = regex.exec(url);\r\n  if (!results)\r\n    return null;\r\n  if (!results[2])\r\n    return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n"]}